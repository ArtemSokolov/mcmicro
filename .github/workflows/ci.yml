name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # Installs Nextflow and restores exemplar data from cache or downloads it from S3
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Nextflow
        run: curl -fsSL get.nextflow.io | bash
      - name: Exemplar-001 cache
        uses: actions/cache@v2
        with:
          path: ~/data/exemplar-001
          key: mcmicro-exemplar-001
      - name: Exemplar-001 download
        run: |
          if [ -d ~/data/exemplar-001 ]; then
            echo "Using cached exemplar-001 download"
            ls ~/data/exemplar-001/*
          else
            ./nextflow exemplar.nf --name exemplar-001 --path ~/data
          fi
      # - name: Download exemplar-002
      #   run: nextflow exemplar.nf --name exemplar-002 --path ~/data

  # One-shot test of exemplar-001
  test-ex001:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Nextflow
        run: curl -fsSL get.nextflow.io | bash
      - name: Restore exemplar-001 cache
        uses: actions/cache@v2
        with:
          path: ~/data/exemplar-001
          key: mcmicro-exemplar-001
      - name: Test exemplar-001
        run: |
          ./nextflow main.nf --in ~/data/exemplar-001 --probability-maps all --s3seg-opts '--probMapChan 0'
          ls ~/data/exemplar-001/*

  # Step-by-step test of exemplar-001
  test-ex001-by-step:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Nextflow
        run: curl -fsSL get.nextflow.io | bash
      - name: Restore exemplar-001 cache
        uses: actions/cache@v2
        with:
          path: ~/data/exemplar-001
          key: mcmicro-exemplar-001
      - name: Test exemplar-001 step-by-step
        run: |
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at registration --stop-at registration
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at probability-maps --stop-at probability-maps --probability-maps ilastik
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at segmentation --stop-at segmentation --probability-maps ilastik --s3seg-opts '--probMapChan 0'
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at probability-maps --stop-at probability-maps --probability-maps unmicst
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at segmentation --stop-at segmentation --probability-maps unmicst
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at quantification --stop-at quantification
          ./nextflow main.nf --in ~/data/exemplar-001 --start-at cell-states
          ls ~/data/exemplar-001/*
